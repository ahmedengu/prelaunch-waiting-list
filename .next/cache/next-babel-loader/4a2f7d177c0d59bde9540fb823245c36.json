{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Parse from 'parse';\nimport cookie from 'js-cookie';\nimport Share from './share';\nimport { setUser } from '../store';\nimport Unverified from './unverified';\n\nvar LoggedIn =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoggedIn, _React$Component);\n\n  function LoggedIn(props) {\n    var _this;\n\n    _classCallCheck(this, LoggedIn);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoggedIn).call(this, props));\n    _this.state = {\n      subscription: undefined\n    };\n    return _this;\n  }\n\n  _createClass(LoggedIn, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var subscription = this.state.subscription;\n      var _this$props = this.props,\n          setUserHandler = _this$props.setUserHandler,\n          user = _this$props.user;\n\n      if (!subscription && user && user.objectId) {\n        var query = new Parse.Query(Parse.User);\n        query.equalTo('objectId', user.objectId);\n        query.subscribe().then(function (sub) {\n          _this2.setState({\n            subscription: sub\n          });\n\n          sub.on('close', function () {\n            _this2.setState({\n              subscription: undefined\n            });\n          });\n          sub.on('update', function (aUser) {\n            var userJson = aUser.toJSON();\n            setUserHandler(userJson);\n            cookie.set('user', userJson);\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          t = _this$props2.t,\n          user = _this$props2.user;\n      return __jsx(React.Fragment, null, user && !user.emailVerified && __jsx(Unverified, {\n        t: t,\n        email: user.email || user.username\n      }), __jsx(Share, {\n        t: t\n      }));\n    }\n  }]);\n\n  return LoggedIn;\n}(React.Component);\n\nLoggedIn.propTypes = {\n  t: PropTypes.func.isRequired,\n  setUserHandler: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = {\n  setUserHandler: setUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LoggedIn);","map":{"version":3,"sources":["C:\\Users\\Mahmoud\\merquant_prelunch\\components\\loggedIn.jsx"],"names":["React","PropTypes","connect","Parse","cookie","Share","setUser","Unverified","LoggedIn","props","state","subscription","undefined","setUserHandler","user","objectId","query","Query","User","equalTo","subscribe","then","sub","setState","on","aUser","userJson","toJSON","set","t","emailVerified","email","username","Component","propTypes","func","isRequired","object","mapStateToProps","mapDispatchToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,YAAY,EAAEC;AAAhB,KAAb;AAFiB;AAGlB;;;;wCAGmB;AAAA;;AAAA,UACVD,YADU,GACO,KAAKD,KADZ,CACVC,YADU;AAAA,wBAEe,KAAKF,KAFpB;AAAA,UAEVI,cAFU,eAEVA,cAFU;AAAA,UAEMC,IAFN,eAEMA,IAFN;;AAIlB,UAAI,CAACH,YAAD,IAAiBG,IAAjB,IAAyBA,IAAI,CAACC,QAAlC,EAA4C;AAC1C,YAAMC,KAAK,GAAG,IAAIb,KAAK,CAACc,KAAV,CAAgBd,KAAK,CAACe,IAAtB,CAAd;AACAF,QAAAA,KAAK,CAACG,OAAN,CAAc,UAAd,EAA0BL,IAAI,CAACC,QAA/B;AACAC,QAAAA,KAAK,CAACI,SAAN,GACGC,IADH,CACQ,UAACC,GAAD,EAAS;AACb,UAAA,MAAI,CAACC,QAAL,CAAc;AAAEZ,YAAAA,YAAY,EAAEW;AAAhB,WAAd;;AAEAA,UAAAA,GAAG,CAACE,EAAJ,CAAO,OAAP,EAAgB,YAAM;AACpB,YAAA,MAAI,CAACD,QAAL,CAAc;AAAEZ,cAAAA,YAAY,EAAEC;AAAhB,aAAd;AACD,WAFD;AAIAU,UAAAA,GAAG,CAACE,EAAJ,CAAO,QAAP,EAAiB,UAACC,KAAD,EAAW;AAC1B,gBAAMC,QAAQ,GAAID,KAAD,CAAQE,MAAR,EAAjB;AACAd,YAAAA,cAAc,CAACa,QAAD,CAAd;AACAtB,YAAAA,MAAM,CAACwB,GAAP,CAAW,MAAX,EAAmBF,QAAnB;AACD,WAJD;AAKD,SAbH;AAcD;AACF;;;6BAEQ;AAAA,yBACa,KAAKjB,KADlB;AAAA,UACCoB,CADD,gBACCA,CADD;AAAA,UACIf,IADJ,gBACIA,IADJ;AAEP,aACE,4BACGA,IAAI,IAAI,CAACA,IAAI,CAACgB,aAAd,IACC,MAAC,UAAD;AAAY,QAAA,CAAC,EAAED,CAAf;AAAkB,QAAA,KAAK,EAAEf,IAAI,CAACiB,KAAL,IAAcjB,IAAI,CAACkB;AAA5C,QAFJ,EAIE,MAAC,KAAD;AAAO,QAAA,CAAC,EAAEH;AAAV,QAJF,CADF;AASD;;;;EA1CoB7B,KAAK,CAACiC,S;;AA6C7BzB,QAAQ,CAAC0B,SAAT,GAAqB;AACnBL,EAAAA,CAAC,EAAE5B,SAAS,CAACkC,IAAV,CAAeC,UADC;AAEnBvB,EAAAA,cAAc,EAAEZ,SAAS,CAACkC,IAAV,CAAeC,UAFZ;AAGnBtB,EAAAA,IAAI,EAAEb,SAAS,CAACoC,MAAV,CAAiBD;AAHJ,CAArB;;AAMA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAC5B,KAAD;AAAA,SAAY;AAClCI,IAAAA,IAAI,EAAEJ,KAAK,CAACI;AADsB,GAAZ;AAAA,CAAxB;;AAIA,IAAMyB,kBAAkB,GAAG;AACzB1B,EAAAA,cAAc,EAAEP;AADS,CAA3B;AAIA,eAAeJ,OAAO,CAACoC,eAAD,EAAkBC,kBAAlB,CAAP,CAA6C/B,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport Parse from 'parse';\r\nimport cookie from 'js-cookie';\r\nimport Share from './share';\r\nimport { setUser } from '../store';\r\nimport Unverified from './unverified';\r\n\r\nclass LoggedIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { subscription: undefined };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    const { subscription } = this.state;\r\n    const { setUserHandler, user } = this.props;\r\n\r\n    if (!subscription && user && user.objectId) {\r\n      const query = new Parse.Query(Parse.User);\r\n      query.equalTo('objectId', user.objectId);\r\n      query.subscribe()\r\n        .then((sub) => {\r\n          this.setState({ subscription: sub });\r\n\r\n          sub.on('close', () => {\r\n            this.setState({ subscription: undefined });\r\n          });\r\n\r\n          sub.on('update', (aUser) => {\r\n            const userJson = (aUser).toJSON();\r\n            setUserHandler(userJson);\r\n            cookie.set('user', userJson);\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { t, user } = this.props;\r\n    return (\r\n      <>\r\n        {user && !user.emailVerified && (\r\n          <Unverified t={t} email={user.email || user.username} />\r\n        )}\r\n        <Share t={t} />\r\n        {/* <Gifts t={t} /> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nLoggedIn.propTypes = {\r\n  t: PropTypes.func.isRequired,\r\n  setUserHandler: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setUserHandler: setUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoggedIn);\r\n"]},"metadata":{},"sourceType":"module"}