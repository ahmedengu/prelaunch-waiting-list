{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport Parse from 'parse';\nimport { Provider } from 'react-redux';\nimport nextCookie from 'next-cookies';\nimport cookie from 'js-cookie';\nimport Router from 'next/router';\nimport * as qs from 'qs';\nimport { appWithTranslation, i18n } from '../i18n';\nimport withReduxStore from '../lib/with-redux-store';\nimport { setUser } from '../store';\nimport { countries, javaScriptKey, applicationId, serverURL } from '../constants';\nimport Layout from '../components/Layout';\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const {\n      reduxStore,\n      res,\n      pathname,\n      query,\n      req\n    } = ctx;\n    let {\n      user\n    } = nextCookie(ctx);\n    user = user && JSON.parse(user);\n\n    if (user) {\n      reduxStore.dispatch(setUser(user));\n      const myCountry = `/${user.country}`;\n\n      if ((!query || query.ref !== user.ref) && myCountry === pathname || myCountry !== pathname && countries.includes(pathname.replace('/', ''))) {\n        query.ref = user.ref;\n\n        if (res) {\n          res.writeHead(302, {\n            Location: `${myCountry}?${qs.stringify(query)}`\n          });\n          res.end();\n        } else {\n          Router.push(`${myCountry}?${qs.stringify(query)}`);\n        }\n      }\n    }\n\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    const lang = req ? req.language : i18n.language;\n    return {\n      pageProps,\n      lang\n    };\n  }\n\n  render() {\n    if (process.browser) {\n      Parse.initialize(applicationId, javaScriptKey);\n      Parse.serverURL = serverURL;\n    }\n\n    const {\n      Component,\n      pageProps,\n      reduxStore,\n      lang\n    } = this.props;\n    Parse.User.currentAsync().then(async user => {\n      let userJson = user && user.toJSON();\n      reduxStore.dispatch(setUser(userJson));\n\n      if (userJson) {\n        cookie.set('user', userJson);\n\n        try {\n          if (userJson.lang === lang) {\n            userJson = (await Parse.User.current().fetch()).toJSON();\n          } else {\n            user.set('lang', lang);\n            userJson = (await user.save()).toJSON();\n          }\n        } catch (e) {\n          Parse.User.logOut();\n          userJson = undefined;\n        }\n\n        reduxStore.dispatch(setUser(userJson));\n\n        if (userJson) {\n          cookie.set('user', userJson);\n        } else {\n          cookie.remove('user');\n        }\n      } else {\n        cookie.remove('user');\n      }\n    });\n    return __jsx(Provider, {\n      store: reduxStore\n    }, __jsx(Layout, null, __jsx(Component, pageProps)));\n  }\n\n}\n\nexport default withReduxStore(appWithTranslation(MyApp));","map":{"version":3,"sources":["C:\\Users\\Mahmoud\\merquant_prelunch\\pages\\_app.jsx"],"names":["React","App","Parse","Provider","nextCookie","cookie","Router","qs","appWithTranslation","i18n","withReduxStore","setUser","countries","javaScriptKey","applicationId","serverURL","Layout","MyApp","getInitialProps","Component","ctx","reduxStore","res","pathname","query","req","user","JSON","parse","dispatch","myCountry","country","ref","includes","replace","writeHead","Location","stringify","end","push","pageProps","lang","language","render","process","browser","initialize","props","User","currentAsync","then","userJson","toJSON","set","current","fetch","save","e","logOut","undefined","remove"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport App from 'next/app';\r\nimport Parse from 'parse';\r\nimport { Provider } from 'react-redux';\r\nimport nextCookie from 'next-cookies';\r\nimport cookie from 'js-cookie';\r\nimport Router from 'next/router';\r\nimport * as qs from 'qs';\r\nimport { appWithTranslation, i18n } from '../i18n';\r\nimport withReduxStore from '../lib/with-redux-store';\r\nimport { setUser } from '../store';\r\nimport {\r\n  countries, javaScriptKey, applicationId, serverURL,\r\n} from '../constants';\r\nimport Layout from '../components/Layout'\r\n\r\nclass MyApp extends App {\r\n  static async getInitialProps({ Component, ctx }) {\r\n    const {\r\n      reduxStore, res, pathname, query, req,\r\n    } = ctx;\r\n    let { user } = (nextCookie(ctx));\r\n    user = user && JSON.parse(user);\r\n    if (user) {\r\n      reduxStore.dispatch(setUser(user));\r\n      const myCountry = `/${user.country}`;\r\n      if (((!query || query.ref !== user.ref) && myCountry === pathname)\r\n        || (myCountry !== pathname && countries.includes(pathname.replace('/', '')))) {\r\n        query.ref = user.ref;\r\n\r\n        if (res) {\r\n          res.writeHead(302, {\r\n            Location: `${myCountry}?${qs.stringify(query)}`,\r\n          });\r\n          res.end();\r\n        } else {\r\n          Router.push(`${myCountry}?${qs.stringify(query)}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n    const lang = (req ? req.language : i18n.language);\r\n\r\n    return {\r\n      pageProps,\r\n      lang,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (process.browser) {\r\n      Parse.initialize(applicationId, javaScriptKey);\r\n      Parse.serverURL = serverURL;\r\n    }\r\n    const {\r\n      Component, pageProps, reduxStore, lang,\r\n    } = this.props;\r\n\r\n    Parse.User.currentAsync()\r\n      .then(async (user) => {\r\n        let userJson = user && user.toJSON();\r\n        reduxStore.dispatch(setUser(userJson));\r\n\r\n        if (userJson) {\r\n          cookie.set('user', userJson);\r\n          try {\r\n            if (userJson.lang === lang) {\r\n              userJson = (await Parse.User.current()\r\n                .fetch()).toJSON();\r\n            } else {\r\n              user.set('lang', lang);\r\n              userJson = (await user.save())\r\n                .toJSON();\r\n            }\r\n          } catch (e) {\r\n            Parse.User.logOut();\r\n            userJson = undefined;\r\n          }\r\n          reduxStore.dispatch(setUser(userJson));\r\n          if (userJson) {\r\n            cookie.set('user', userJson);\r\n          } else {\r\n            cookie.remove('user');\r\n          }\r\n        } else {\r\n          cookie.remove('user');\r\n        }\r\n      });\r\n    return (\r\n      <Provider store={reduxStore}>\r\n        <Layout>\r\n          {/* eslint-disable-next-line react/jsx-props-no-spreading */}\r\n          <Component {...pageProps} />\r\n        </Layout>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withReduxStore(appWithTranslation(MyApp));\r\n"]},"metadata":{},"sourceType":"module"}