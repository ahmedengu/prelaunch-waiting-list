{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport Router from 'next/router';\nimport * as qs from 'qs';\nimport { codes, countries } from '../constants';\nexport default class extends React.Component {\n  static async getInitialProps({\n    res,\n    req\n  }) {\n    const {\n      query: {\n        subpath,\n        lng\n      }\n    } = req,\n          query = _objectWithoutProperties(req.query, [\"subpath\", \"lng\"]);\n\n    const queryString = _Object$keys(query).length ? `?${qs.stringify(query)}` : '';\n    let country = 'egypt';\n\n    if (!process.browser) {\n      const geoip = require('geoip-country');\n\n      const geo = geoip.lookup(req.ip);\n      country = geo && geo.country && codes.includes(geo.country) ? countries[codes.indexOf(geo.country)] : 'egypt';\n    }\n\n    if (res) {\n      res.writeHead(302, {\n        Location: `/${country}${queryString}`\n      });\n      res.end();\n    } else {\n      Router.push(`/${country}${queryString}`);\n    }\n\n    return {};\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Mahmoud\\merquant_prelunch\\pages\\index.jsx"],"names":["React","Router","qs","codes","countries","Component","getInitialProps","res","req","query","subpath","lng","queryString","length","stringify","country","process","browser","geoip","require","geo","lookup","ip","includes","indexOf","writeHead","Location","end","push"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,cAAjC;AAEA,eAAe,cAAcJ,KAAK,CAACK,SAApB,CAA8B;AAC3C,eAAaC,eAAb,CAA6B;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAA7B,EAA2C;AACzC,UAAM;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX;AAAT,QAAwCH,GAA9C;AAAA,UAAkCC,KAAlC,4BAA8CD,GAA9C;;AACA,UAAMI,WAAW,GAAG,aAAYH,KAAZ,EAAmBI,MAAnB,GAA6B,IAAGX,EAAE,CAACY,SAAH,CAAaL,KAAb,CAAoB,EAApD,GAAwD,EAA5E;AACA,QAAIM,OAAO,GAAG,OAAd;;AAEA,QAAI,CAACC,OAAO,CAACC,OAAb,EAAsB;AACpB,YAAMC,KAAK,GAAGC,OAAO,CAAC,eAAD,CAArB;;AACA,YAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAab,GAAG,CAACc,EAAjB,CAAZ;AACAP,MAAAA,OAAO,GAAGK,GAAG,IAAIA,GAAG,CAACL,OAAX,IAAsBZ,KAAK,CAACoB,QAAN,CAAeH,GAAG,CAACL,OAAnB,CAAtB,GACNX,SAAS,CAACD,KAAK,CAACqB,OAAN,CAAcJ,GAAG,CAACL,OAAlB,CAAD,CADH,GAEN,OAFJ;AAGD;;AAED,QAAIR,GAAJ,EAAS;AACPA,MAAAA,GAAG,CAACkB,SAAJ,CAAc,GAAd,EAAmB;AACjBC,QAAAA,QAAQ,EAAG,IAAGX,OAAQ,GAAEH,WAAY;AADnB,OAAnB;AAGAL,MAAAA,GAAG,CAACoB,GAAJ;AACD,KALD,MAKO;AACL1B,MAAAA,MAAM,CAAC2B,IAAP,CAAa,IAAGb,OAAQ,GAAEH,WAAY,EAAtC;AACD;;AACD,WAAO,EAAP;AACD;;AAvB0C","sourcesContent":["import React from 'react';\r\nimport Router from 'next/router';\r\nimport * as qs from 'qs';\r\nimport { codes, countries } from '../constants';\r\n\r\nexport default class extends React.Component {\r\n  static async getInitialProps({ res, req }) {\r\n    const { query: { subpath, lng, ...query } } = req;\r\n    const queryString = Object.keys(query).length ? `?${qs.stringify(query)}` : '';\r\n    let country = 'egypt';\r\n\r\n    if (!process.browser) {\r\n      const geoip = require('geoip-country');\r\n      const geo = geoip.lookup(req.ip);\r\n      country = geo && geo.country && codes.includes(geo.country)\r\n        ? countries[codes.indexOf(geo.country)]\r\n        : 'egypt';\r\n    }\r\n\r\n    if (res) {\r\n      res.writeHead(302, {\r\n        Location: `/${country}${queryString}`,\r\n      });\r\n      res.end();\r\n    } else {\r\n      Router.push(`/${country}${queryString}`);\r\n    }\r\n    return {};\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}