{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { i18n, withTranslation } from '../i18n';\nimport PageWrapper from '../components/pageWrapper';\n\nconst Error = ({\n  statusCode,\n  t,\n  lang\n}) => __jsx(PageWrapper, {\n  t: t,\n  lang: lang\n}, __jsx(\"div\", {\n  className: \"container\"\n}, __jsx(\"div\", {\n  className: \"row align-items-center\"\n}, __jsx(\"div\", {\n  className: \"col-12 col-md-6 col-lg-5\",\n  style: {\n    zIndex: 10000\n  }\n}, __jsx(\"h1\", null, t('ops')), __jsx(\"p\", {\n  className: \"lead\"\n}, statusCode ? t('error-with-status', {\n  statusCode\n}) : t('error-without-status'))), __jsx(\"div\", {\n  className: \"col-12 col-md-6 ml-md-auto mt-4 mt-md-0\",\n  style: {\n    zIndex: 10000\n  }\n}, __jsx(\"p\", null, __jsx(\"img\", {\n  alt: \"Shape\",\n  className: \"img-fluid\",\n  src: \"https://cdn.jsdelivr.net/gh/froala/design-blocks@2.0.1/dist/imgs//shapes/2.svg\"\n}))))));\n\nError.getInitialProps = async ({\n  req,\n  res,\n  err\n}) => {\n  let statusCode = null;\n\n  if (res) {\n    ({\n      statusCode\n    } = res);\n  } else if (err) {\n    ({\n      statusCode\n    } = err);\n  }\n\n  const lang = (req ? req.language : i18n.language) || 'en';\n  return {\n    namespacesRequired: ['error'],\n    statusCode,\n    lang\n  };\n};\n\nError.defaultProps = {\n  statusCode: null\n};\nError.propTypes = {\n  statusCode: PropTypes.number,\n  t: PropTypes.func.isRequired,\n  lang: PropTypes.string.isRequired\n};\nexport default withTranslation('error')(Error);","map":{"version":3,"sources":["C:\\Users\\Mahmoud\\merquant_prelunch\\pages\\_error.jsx"],"names":["React","PropTypes","i18n","withTranslation","PageWrapper","Error","statusCode","t","lang","zIndex","getInitialProps","req","res","err","language","namespacesRequired","defaultProps","propTypes","number","func","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,IAAT,EAAeC,eAAf,QAAsC,SAAtC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,CAAd;AAAiBC,EAAAA;AAAjB,CAAD,KACZ,MAAC,WAAD;AAAa,EAAA,CAAC,EAAED,CAAhB;AAAmB,EAAA,IAAI,EAAEC;AAAzB,GACE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAK,EAAA,SAAS,EAAC,0BAAf;AAA0C,EAAA,KAAK,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV;AAAjD,GACE,kBAAKF,CAAC,CAAC,KAAD,CAAN,CADF,EAEE;AAAG,EAAA,SAAS,EAAC;AAAb,GACGD,UAAU,GACPC,CAAC,CAAC,mBAAD,EAAsB;AAAED,EAAAA;AAAF,CAAtB,CADM,GAEPC,CAAC,CAAC,sBAAD,CAHP,CAFF,CADF,EASE;AAAK,EAAA,SAAS,EAAC,yCAAf;AAAyD,EAAA,KAAK,EAAE;AAAEE,IAAAA,MAAM,EAAE;AAAV;AAAhE,GACE,iBACE;AACE,EAAA,GAAG,EAAC,OADN;AAEE,EAAA,SAAS,EAAC,WAFZ;AAGE,EAAA,GAAG,EAAC;AAHN,EADF,CADF,CATF,CADF,CADF,CADF;;AA0BAJ,KAAK,CAACK,eAAN,GAAwB,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,GAAP;AAAYC,EAAAA;AAAZ,CAAP,KAA6B;AACnD,MAAIP,UAAU,GAAG,IAAjB;;AACA,MAAIM,GAAJ,EAAS;AACP,KAAC;AAAEN,MAAAA;AAAF,QAAiBM,GAAlB;AACD,GAFD,MAEO,IAAIC,GAAJ,EAAS;AACd,KAAC;AAAEP,MAAAA;AAAF,QAAiBO,GAAlB;AACD;;AAED,QAAML,IAAI,GAAG,CAACG,GAAG,GAAGA,GAAG,CAACG,QAAP,GAAkBZ,IAAI,CAACY,QAA3B,KAAwC,IAArD;AAEA,SAAO;AACLC,IAAAA,kBAAkB,EAAE,CAAC,OAAD,CADf;AAELT,IAAAA,UAFK;AAGLE,IAAAA;AAHK,GAAP;AAKD,CAfD;;AAiBAH,KAAK,CAACW,YAAN,GAAqB;AACnBV,EAAAA,UAAU,EAAE;AADO,CAArB;AAIAD,KAAK,CAACY,SAAN,GAAkB;AAChBX,EAAAA,UAAU,EAAEL,SAAS,CAACiB,MADN;AAEhBX,EAAAA,CAAC,EAAEN,SAAS,CAACkB,IAAV,CAAeC,UAFF;AAGhBZ,EAAAA,IAAI,EAAEP,SAAS,CAACoB,MAAV,CAAiBD;AAHP,CAAlB;AAMA,eAAejB,eAAe,CAAC,OAAD,CAAf,CAAyBE,KAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { i18n, withTranslation } from '../i18n';\r\nimport PageWrapper from '../components/pageWrapper';\r\n\r\nconst Error = ({ statusCode, t, lang }) => (\r\n  <PageWrapper t={t} lang={lang}>\r\n    <div className=\"container\">\r\n      <div className=\"row align-items-center\">\r\n        <div className=\"col-12 col-md-6 col-lg-5\" style={{ zIndex: 10000 }}>\r\n          <h1>{t('ops')}</h1>\r\n          <p className=\"lead\">\r\n            {statusCode\r\n              ? t('error-with-status', { statusCode })\r\n              : t('error-without-status')}\r\n          </p>\r\n        </div>\r\n        <div className=\"col-12 col-md-6 ml-md-auto mt-4 mt-md-0\" style={{ zIndex: 10000 }}>\r\n          <p>\r\n            <img\r\n              alt=\"Shape\"\r\n              className=\"img-fluid\"\r\n              src=\"https://cdn.jsdelivr.net/gh/froala/design-blocks@2.0.1/dist/imgs//shapes/2.svg\"\r\n            />\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </PageWrapper>\r\n);\r\n\r\nError.getInitialProps = async ({ req, res, err }) => {\r\n  let statusCode = null;\r\n  if (res) {\r\n    ({ statusCode } = res);\r\n  } else if (err) {\r\n    ({ statusCode } = err);\r\n  }\r\n\r\n  const lang = (req ? req.language : i18n.language) || 'en';\r\n\r\n  return {\r\n    namespacesRequired: ['error'],\r\n    statusCode,\r\n    lang,\r\n  };\r\n};\r\n\r\nError.defaultProps = {\r\n  statusCode: null,\r\n};\r\n\r\nError.propTypes = {\r\n  statusCode: PropTypes.number,\r\n  t: PropTypes.func.isRequired,\r\n  lang: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withTranslation('error')(Error);\r\n"]},"metadata":{},"sourceType":"module"}