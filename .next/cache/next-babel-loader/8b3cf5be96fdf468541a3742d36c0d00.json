{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { initializeStore } from '../store';\nvar isServer = false;\nvar __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__';\n\nfunction getOrCreateStore(initialState) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return initializeStore(initialState);\n  } // Create store if unavailable on the client and set it on the window object\n\n\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\n  }\n\n  return window[__NEXT_REDUX_STORE__];\n}\n\nexport default (function (App) {\n  return (\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(AppWithRedux, _React$Component);\n\n      _createClass(AppWithRedux, null, [{\n        key: \"getInitialProps\",\n        value: function () {\n          var _getInitialProps = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee(appContext) {\n            var reduxStore, appProps;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    // Get or Create the store with `undefined` as initialState\n                    // This allows you to set a custom default initialState\n                    reduxStore = getOrCreateStore(); // Provide the store to getInitialProps of pages\n\n                    appContext.ctx.reduxStore = reduxStore;\n                    appProps = {};\n\n                    if (!(typeof App.getInitialProps === 'function')) {\n                      _context.next = 7;\n                      break;\n                    }\n\n                    _context.next = 6;\n                    return App.getInitialProps(appContext);\n\n                  case 6:\n                    appProps = _context.sent;\n\n                  case 7:\n                    return _context.abrupt(\"return\", _objectSpread({}, appProps, {\n                      initialReduxState: reduxStore.getState()\n                    }));\n\n                  case 8:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          function getInitialProps(_x) {\n            return _getInitialProps.apply(this, arguments);\n          }\n\n          return getInitialProps;\n        }()\n      }]);\n\n      function AppWithRedux(props) {\n        var _this;\n\n        _classCallCheck(this, AppWithRedux);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AppWithRedux).call(this, props));\n        _this.reduxStore = getOrCreateStore(props.initialReduxState);\n        return _this;\n      }\n\n      _createClass(AppWithRedux, [{\n        key: \"render\",\n        value: function render() {\n          return __jsx(App, _extends({}, this.props, {\n            reduxStore: this.reduxStore\n          }));\n        }\n      }]);\n\n      return AppWithRedux;\n    }(React.Component)\n  );\n});","map":{"version":3,"sources":["C:\\Users\\Mahmoud\\merquant_prelunch\\lib\\with-redux-store.jsx"],"names":["React","initializeStore","isServer","__NEXT_REDUX_STORE__","getOrCreateStore","initialState","window","App","appContext","reduxStore","ctx","appProps","getInitialProps","initialReduxState","getState","props","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,UAAhC;AAEA,IAAMC,QAAQ,QAAd;AACA,IAAMC,oBAAoB,GAAG,sBAA7B;;AAEA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AACtC;AACA,MAAIH,QAAJ,EAAc;AACZ,WAAOD,eAAe,CAACI,YAAD,CAAtB;AACD,GAJqC,CAMtC;;;AACA,MAAI,CAACC,MAAM,CAACH,oBAAD,CAAX,EAAmC;AACjCG,IAAAA,MAAM,CAACH,oBAAD,CAAN,GAA+BF,eAAe,CAACI,YAAD,CAA9C;AACD;;AACD,SAAOC,MAAM,CAACH,oBAAD,CAAb;AACD;;AAED,gBAAe,UAACI,GAAD;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDACgBC,UADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEX;AACA;AACMC,oBAAAA,UAJK,GAIQL,gBAAgB,EAJxB,EAMX;;AACAI,oBAAAA,UAAU,CAACE,GAAX,CAAeD,UAAf,GAA4BA,UAA5B;AAEIE,oBAAAA,QATO,GASI,EATJ;;AAAA,0BAUP,OAAOJ,GAAG,CAACK,eAAX,KAA+B,UAVxB;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAWQL,GAAG,CAACK,eAAJ,CAAoBJ,UAApB,CAXR;;AAAA;AAWTG,oBAAAA,QAXS;;AAAA;AAAA,uEAeNA,QAfM;AAgBTE,sBAAAA,iBAAiB,EAAEJ,UAAU,CAACK,QAAX;AAhBV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAoBb,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,0FAAMA,KAAN;AACA,cAAKN,UAAL,GAAkBL,gBAAgB,CAACW,KAAK,CAACF,iBAAP,CAAlC;AAFiB;AAGlB;;AAvBY;AAAA;AAAA,iCAyBJ;AACP,iBAAO,MAAC,GAAD,eAAS,KAAKE,KAAd;AAAqB,YAAA,UAAU,EAAE,KAAKN;AAAtC,aAAP;AACD;AA3BY;;AAAA;AAAA,MAAoCT,KAAK,CAACgB,SAA1C;AAAA;AAAA,CAAf","sourcesContent":["import React from 'react';\r\nimport { initializeStore } from '../store';\r\n\r\nconst isServer = typeof window === 'undefined';\r\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__';\r\n\r\nfunction getOrCreateStore(initialState) {\r\n  // Always make a new store if server, otherwise state is shared between requests\r\n  if (isServer) {\r\n    return initializeStore(initialState);\r\n  }\r\n\r\n  // Create store if unavailable on the client and set it on the window object\r\n  if (!window[__NEXT_REDUX_STORE__]) {\r\n    window[__NEXT_REDUX_STORE__] = initializeStore(initialState);\r\n  }\r\n  return window[__NEXT_REDUX_STORE__];\r\n}\r\n\r\nexport default (App) => class AppWithRedux extends React.Component {\r\n  static async getInitialProps(appContext) {\r\n    // Get or Create the store with `undefined` as initialState\r\n    // This allows you to set a custom default initialState\r\n    const reduxStore = getOrCreateStore();\r\n\r\n    // Provide the store to getInitialProps of pages\r\n    appContext.ctx.reduxStore = reduxStore;\r\n\r\n    let appProps = {};\r\n    if (typeof App.getInitialProps === 'function') {\r\n      appProps = await App.getInitialProps(appContext);\r\n    }\r\n\r\n    return {\r\n      ...appProps,\r\n      initialReduxState: reduxStore.getState(),\r\n    };\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.reduxStore = getOrCreateStore(props.initialReduxState);\r\n  }\r\n\r\n  render() {\r\n    return <App {...this.props} reduxStore={this.reduxStore} />;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}