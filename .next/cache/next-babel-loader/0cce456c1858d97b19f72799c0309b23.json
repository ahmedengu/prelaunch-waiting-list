{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport Parse from 'parse';\nimport { Provider } from 'react-redux';\nimport nextCookie from 'next-cookies';\nimport cookie from 'js-cookie';\nimport Router from 'next/router';\nimport * as qs from 'qs';\nimport { appWithTranslation, i18n } from '../i18n';\nimport withReduxStore from '../lib/with-redux-store';\nimport { setUser } from '../store';\nimport { countries, javaScriptKey, applicationId, serverURL } from '../constants';\nimport Layout from '../components/Layout';\n\nclass MyApp extends App {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"refreshUser\", (reduxStore, lang) => {\n      Parse.User.currentAsync().then(async user => {\n        let userJson = user && user.toJSON();\n        reduxStore.dispatch(setUser(userJson));\n\n        if (userJson) {\n          cookie.set('user', userJson);\n\n          try {\n            if (userJson.lang === lang) {\n              userJson = (await Parse.User.current().fetch()).toJSON();\n            } else {\n              user.set('lang', lang);\n              userJson = (await user.save()).toJSON();\n            }\n          } catch (e) {\n            Parse.User.logOut();\n            userJson = undefined;\n          }\n\n          reduxStore.dispatch(setUser(userJson));\n\n          if (userJson) {\n            cookie.set('user', userJson);\n          } else {\n            cookie.remove('user');\n          }\n        } else {\n          cookie.remove('user');\n        }\n      });\n    });\n\n    const {\n      reduxStore: _reduxStore,\n      lang: _lang,\n      router: {\n        pathname,\n        query: {\n          token,\n          link,\n          username\n        }\n      }\n    } = props;\n\n    if (process.browser) {\n      Parse.initialize(applicationId, javaScriptKey);\n      Parse.serverURL = serverURL;\n\n      if (token && link && username) {\n        if (link.includes('verify_email')) {\n          Parse.Cloud.run('verifyEmail', {\n            username,\n            token\n          }).then(() => {\n            Router.push(pathname);\n            this.refreshUser(_reduxStore, _lang);\n          });\n        } else if (link.includes('unsub')) {\n          Parse.Cloud.run('manageSub', {\n            username,\n            token,\n            sendEmails: false\n          }).then(() => {\n            Router.push(pathname);\n            this.refreshUser(_reduxStore, _lang);\n          });\n        } else if (link.includes('resub')) {\n          Parse.Cloud.run('manageSub', {\n            username,\n            token,\n            sendEmails: true\n          }).then(() => {\n            Router.push(pathname);\n            this.refreshUser(_reduxStore, _lang);\n          });\n        }\n      }\n\n      this.refreshUser(_reduxStore, _lang);\n    }\n  }\n\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const {\n      reduxStore,\n      res,\n      pathname,\n      query,\n      req\n    } = ctx;\n    let {\n      user\n    } = nextCookie(ctx);\n    user = user && JSON.parse(user);\n\n    if (user) {\n      reduxStore.dispatch(setUser(user));\n      const myCountry = `/${user.country}`;\n\n      if ((!query || query.ref !== user.ref) && myCountry === pathname || myCountry !== pathname && countries.includes(pathname.replace('/', ''))) {\n        query.ref = user.ref;\n\n        if (res) {\n          res.writeHead(302, {\n            Location: `${myCountry}?${qs.stringify(query)}`\n          });\n          res.end();\n        } else {\n          Router.push(`${myCountry}?${qs.stringify(query)}`);\n        }\n      }\n    }\n\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    const lang = req ? req.language : i18n.language;\n    return {\n      pageProps,\n      lang\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      reduxStore\n    } = this.props;\n    return __jsx(Provider, {\n      store: reduxStore\n    }, __jsx(Layout, null, __jsx(Component, pageProps)));\n  }\n\n}\n\nexport default withReduxStore(appWithTranslation(MyApp));","map":{"version":3,"sources":["C:\\Users\\Mahmoud\\merquant_prelunch\\pages\\_app.jsx"],"names":["React","App","Parse","Provider","nextCookie","cookie","Router","qs","appWithTranslation","i18n","withReduxStore","setUser","countries","javaScriptKey","applicationId","serverURL","Layout","MyApp","constructor","props","reduxStore","lang","User","currentAsync","then","user","userJson","toJSON","dispatch","set","current","fetch","save","e","logOut","undefined","remove","router","pathname","query","token","link","username","process","browser","initialize","includes","Cloud","run","push","refreshUser","sendEmails","getInitialProps","Component","ctx","res","req","JSON","parse","myCountry","country","ref","replace","writeHead","Location","stringify","end","pageProps","language","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport App from 'next/app';\r\nimport Parse from 'parse';\r\nimport { Provider } from 'react-redux';\r\nimport nextCookie from 'next-cookies';\r\nimport cookie from 'js-cookie';\r\nimport Router from 'next/router';\r\nimport * as qs from 'qs';\r\nimport { appWithTranslation, i18n } from '../i18n';\r\nimport withReduxStore from '../lib/with-redux-store';\r\nimport { setUser } from '../store';\r\nimport {\r\n  countries, javaScriptKey, applicationId, serverURL,\r\n} from '../constants';\r\nimport Layout from '../components/Layout'\r\n\r\nclass MyApp extends App {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      reduxStore, lang, router: { pathname, query: { token, link, username } },\r\n    } = props;\r\n\r\n    if (process.browser) {\r\n      Parse.initialize(applicationId, javaScriptKey);\r\n      Parse.serverURL = serverURL;\r\n\r\n      if (token && link && username) {\r\n        if (link.includes('verify_email')) {\r\n          Parse.Cloud.run('verifyEmail', { username, token }).then(() => {\r\n            Router.push(pathname);\r\n            this.refreshUser(reduxStore, lang);\r\n          });\r\n        } else if (link.includes('unsub')) {\r\n          Parse.Cloud.run('manageSub', { username, token, sendEmails: false }).then(() => {\r\n            Router.push(pathname);\r\n            this.refreshUser(reduxStore, lang);\r\n          });\r\n        } else if (link.includes('resub')) {\r\n          Parse.Cloud.run('manageSub', { username, token, sendEmails: true }).then(() => {\r\n            Router.push(pathname);\r\n            this.refreshUser(reduxStore, lang);\r\n          });\r\n        }\r\n      }\r\n\r\n      this.refreshUser(reduxStore, lang);\r\n    }\r\n  }\r\n\r\n  refreshUser = (reduxStore, lang) => {\r\n    Parse.User.currentAsync()\r\n      .then(async (user) => {\r\n        let userJson = user && user.toJSON();\r\n        reduxStore.dispatch(setUser(userJson));\r\n\r\n        if (userJson) {\r\n          cookie.set('user', userJson);\r\n          try {\r\n            if (userJson.lang === lang) {\r\n              userJson = (await Parse.User.current()\r\n                .fetch()).toJSON();\r\n            } else {\r\n              user.set('lang', lang);\r\n              userJson = (await user.save())\r\n                .toJSON();\r\n            }\r\n          } catch (e) {\r\n            Parse.User.logOut();\r\n            userJson = undefined;\r\n          }\r\n          reduxStore.dispatch(setUser(userJson));\r\n          if (userJson) {\r\n            cookie.set('user', userJson);\r\n          } else {\r\n            cookie.remove('user');\r\n          }\r\n        } else {\r\n          cookie.remove('user');\r\n        }\r\n      });\r\n  };\r\n\r\n  static async getInitialProps({ Component, ctx }) {\r\n    const {\r\n      reduxStore, res, pathname, query, req,\r\n    } = ctx;\r\n    let { user } = (nextCookie(ctx));\r\n    user = user && JSON.parse(user);\r\n    if (user) {\r\n      reduxStore.dispatch(setUser(user));\r\n      const myCountry = `/${user.country}`;\r\n      if (((!query || query.ref !== user.ref) && myCountry === pathname)\r\n        || (myCountry !== pathname && countries.includes(pathname.replace('/', '')))) {\r\n        query.ref = user.ref;\r\n\r\n        if (res) {\r\n          res.writeHead(302, {\r\n            Location: `${myCountry}?${qs.stringify(query)}`,\r\n          });\r\n          res.end();\r\n        } else {\r\n          Router.push(`${myCountry}?${qs.stringify(query)}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n    const lang = (req ? req.language : i18n.language);\r\n\r\n    return {\r\n      pageProps,\r\n      lang,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      Component, pageProps, reduxStore,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Provider store={reduxStore}>\r\n        <Layout>\r\n          {/* eslint-disable-next-line react/jsx-props-no-spreading */}\r\n          <Component {...pageProps} />\r\n        </Layout>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withReduxStore(appWithTranslation(MyApp));\r\n"]},"metadata":{},"sourceType":"module"}