{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst exampleInitialState = {\n  user: {},\n  country: 'egypt'\n};\nexport const actionTypes = {\n  USER: 'USER',\n  COUNTRY: 'COUNTRY',\n  T: 'T',\n  LANG: 'LANG'\n}; // REDUCERS\n\nexport const reducer = (state = exampleInitialState, action) => {\n  switch (action.type) {\n    case actionTypes.USER:\n      // eslint-disable-next-line no-case-declarations\n      return _objectSpread({}, state, {\n        user: action.user || {}\n      });\n\n    case actionTypes.COUNTRY:\n      return _objectSpread({}, state, {\n        country: action.country\n      });\n\n    default:\n      return state;\n  }\n}; // ACTIONS\n\nexport const setCountry = country => ({\n  type: actionTypes.COUNTRY,\n  country\n});\nexport const setUser = user => ({\n  type: actionTypes.USER,\n  user\n});\nexport function initializeStore(initialState = exampleInitialState) {\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware()));\n}","map":{"version":3,"sources":["C:\\Users\\Mahmoud\\merquant_prelunch\\store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","exampleInitialState","user","country","actionTypes","USER","COUNTRY","T","LANG","reducer","state","action","type","setCountry","setUser","initializeStore","initialState"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,MAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,IAAI,EAAE,EADoB;AAE1BC,EAAAA,OAAO,EAAE;AAFiB,CAA5B;AAKA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAE,MADmB;AACXC,EAAAA,OAAO,EAAE,SADE;AACSC,EAAAA,CAAC,EAAE,GADZ;AACiBC,EAAAA,IAAI,EAAE;AADvB,CAApB,C,CAIP;;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGT,mBAAT,EAA8BU,MAA9B,KAAyC;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAW,CAACC,IAAjB;AACE;AACA,+BACKK,KADL;AAEER,QAAAA,IAAI,EAAES,MAAM,CAACT,IAAP,IAAe;AAFvB;;AAIF,SAAKE,WAAW,CAACE,OAAjB;AACE,+BAAYI,KAAZ;AAAmBP,QAAAA,OAAO,EAAEQ,MAAM,CAACR;AAAnC;;AACF;AACE,aAAOO,KAAP;AAVJ;AAYD,CAbM,C,CAeP;;AACA,OAAO,MAAMG,UAAU,GAAIV,OAAD,KAAc;AAAES,EAAAA,IAAI,EAAER,WAAW,CAACE,OAApB;AAA6BH,EAAAA;AAA7B,CAAd,CAAnB;AACP,OAAO,MAAMW,OAAO,GAAIZ,IAAD,KAAW;AAAEU,EAAAA,IAAI,EAAER,WAAW,CAACC,IAApB;AAA0BH,EAAAA;AAA1B,CAAX,CAAhB;AAEP,OAAO,SAASa,eAAT,CAAyBC,YAAY,GAAGf,mBAAxC,EAA6D;AAClE,SAAOH,WAAW,CAChBW,OADgB,EAEhBO,YAFgB,EAGhBhB,mBAAmB,CAACD,eAAe,EAAhB,CAHH,CAAlB;AAKD","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst exampleInitialState = {\r\n  user: {},\r\n  country: 'egypt',\r\n};\r\n\r\nexport const actionTypes = {\r\n  USER: 'USER', COUNTRY: 'COUNTRY', T: 'T', LANG: 'LANG',\r\n};\r\n\r\n// REDUCERS\r\nexport const reducer = (state = exampleInitialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.USER:\r\n      // eslint-disable-next-line no-case-declarations\r\n      return {\r\n        ...state,\r\n        user: action.user || {},\r\n      };\r\n    case actionTypes.COUNTRY:\r\n      return { ...state, country: action.country };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// ACTIONS\r\nexport const setCountry = (country) => ({ type: actionTypes.COUNTRY, country });\r\nexport const setUser = (user) => ({ type: actionTypes.USER, user });\r\n\r\nexport function initializeStore(initialState = exampleInitialState) {\r\n  return createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware()),\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}