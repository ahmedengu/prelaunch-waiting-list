{"version":3,"file":"static/webpack/static\\development\\pages\\_error.js.0ec0661bf16a2c9b6b9a.hot-update.js","sources":["webpack:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js","webpack:///./pages/_error.jsx"],"sourcesContent":["\n    (window.__NEXT_P=window.__NEXT_P||[]).push([\"/_error\", function() {\n      var mod = require(\"C:\\\\Users\\\\Mahmoud\\\\merquant_prelunch\\\\pages\\\\_error.jsx\")\n      if(module.hot) {\n        module.hot.accept(\"C:\\\\Users\\\\Mahmoud\\\\merquant_prelunch\\\\pages\\\\_error.jsx\", function() {\n          if(!next.router.components[\"/_error\"]) return\n          var updatedPage = require(\"C:\\\\Users\\\\Mahmoud\\\\merquant_prelunch\\\\pages\\\\_error.jsx\")\n          next.router.update(\"/_error\", updatedPage)\n        })\n      }\n      return mod\n    }]);\n  ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { i18n, withTranslation } from '../i18n';\r\nimport PageWrapper from '../components/pageWrapper';\r\n\r\nconst Error = ({ statusCode, t, lang }) => (\r\n  <PageWrapper t={t} lang={lang}>\r\n    <div className=\"container\">\r\n      <div className=\"row align-items-center\">\r\n        <div className=\"col-12 col-md-6 col-lg-5\" style={{ zIndex: 10000 }}>\r\n          <h1>{t('ops')}</h1>\r\n          <p className=\"lead\">\r\n            {statusCode\r\n              ? t('error-with-status', { statusCode })\r\n              : t('error-without-status')}\r\n          </p>\r\n        </div>\r\n        <div className=\"col-12 col-md-6 ml-md-auto mt-4 mt-md-0\" style={{ zIndex: 10000 }}>\r\n          <p>\r\n            <img\r\n              alt=\"Shape\"\r\n              className=\"img-fluid\"\r\n              src=\"https://cdn.jsdelivr.net/gh/froala/design-blocks@2.0.1/dist/imgs//shapes/2.svg\"\r\n            />\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </PageWrapper>\r\n);\r\n\r\nError.getInitialProps = async ({ req, res, err }) => {\r\n  let statusCode = null;\r\n  if (res) {\r\n    ({ statusCode } = res);\r\n  } else if (err) {\r\n    ({ statusCode } = err);\r\n  }\r\n\r\n  const lang = (req ? req.language : i18n.language) || 'ar';\r\n\r\n  return {\r\n    namespacesRequired: ['common', 'error'],\r\n    statusCode,\r\n    lang,\r\n  };\r\n};\r\n\r\nError.defaultProps = {\r\n  statusCode: null,\r\n};\r\n\r\nError.propTypes = {\r\n  statusCode: PropTypes.number,\r\n  t: PropTypes.func.isRequired,\r\n  lang: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withTranslation('error')(Error);\r\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAdA;AACA;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AAHA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAgBA;AACA;AADA;AAIA;AACA;AACA;AACA;AAHA;AAMA;;;;;;;;;;;;;;;;A","sourceRoot":""}